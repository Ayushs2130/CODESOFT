import tkinter as tk
from tkinter import messagebox, simpledialog

contacts = []

def add_contact():
    name = entry_name.get()
    phone = entry_phone.get()
    email = entry_email.get()
    address = entry_address.get()

    if not name or not phone:
        messagebox.showerror("Input Error", "Name and Phone are required.")
        return

    contacts.append({"name": name, "phone": phone, "email": email, "address": address})
    messagebox.showinfo("Success", "Contact added successfully!")
    clear_entries()
    view_contacts()

def view_contacts():
    listbox.delete(0, tk.END)
    for contact in contacts:
        listbox.insert(tk.END, f"{contact['name']} - {contact['phone']}")

def search_contact():
    search_term = entry_search.get().lower()
    listbox.delete(0, tk.END)
    for contact in contacts:
        if search_term in contact['name'].lower() or search_term in contact['phone']:
            listbox.insert(tk.END, f"{contact['name']} - {contact['phone']}")

def update_contact():
    selected = listbox.curselection()
    if not selected:
        messagebox.showwarning("Select Contact", "Please select a contact to update.")
        return
    index = selected[0]
    contact = contacts[index]

    name = simpledialog.askstring("Update Name", "Enter new name:", initialvalue=contact['name'])
    phone = simpledialog.askstring("Update Phone", "Enter new phone:", initialvalue=contact['phone'])
    email = simpledialog.askstring("Update Email", "Enter new email:", initialvalue=contact['email'])
    address = simpledialog.askstring("Update Address", "Enter new address:", initialvalue=contact['address'])

    contacts[index] = {"name": name, "phone": phone, "email": email, "address": address}
    messagebox.showinfo("Updated", "Contact updated successfully!")
    view_contacts()

def delete_contact():
    selected = listbox.curselection()
    if not selected:
        messagebox.showwarning("Select Contact", "Please select a contact to delete.")
        return
    index = selected[0]
    confirm = messagebox.askyesno("Delete", f"Delete contact: {contacts[index]['name']}?")
    if confirm:
        contacts.pop(index)
        messagebox.showinfo("Deleted", "Contact deleted successfully.")
        view_contacts()

def clear_entries():
    entry_name.delete(0, tk.END)
    entry_phone.delete(0, tk.END)
    entry_email.delete(0, tk.END)
    entry_address.delete(0, tk.END)

root = tk.Tk()
root.title("Contact Management System")
root.geometry("500x600")
root.config(padx=20, pady=20)

tk.Label(root, text="Store Name:").pack()
entry_name = tk.Entry(root)
entry_name.pack(fill='x')

tk.Label(root, text="Phone Number:").pack()
entry_phone = tk.Entry(root)
entry_phone.pack(fill='x')

tk.Label(root, text="Email:").pack()
entry_email = tk.Entry(root)
entry_email.pack(fill='x')

tk.Label(root, text="Address:").pack()
entry_address = tk.Entry(root)
entry_address.pack(fill='x')

tk.Button(root, text="Add Contact", command=add_contact).pack(pady=5)
tk.Button(root, text="Update Selected", command=update_contact).pack(pady=5)
tk.Button(root, text="Delete Selected", command=delete_contact).pack(pady=5)

tk.Label(root, text="Search by Name or Phone:").pack()
entry_search = tk.Entry(root)
entry_search.pack(fill='x')
tk.Button(root, text="Search", command=search_contact).pack(pady=5)

listbox = tk.Listbox(root, height=10)
listbox.pack(fill='both', expand=True, pady=10)

view_contacts()

root.mainloop()
